/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as LocationSlugImport } from './routes/$locationSlug'
import { Route as IndexImport } from './routes/index'
import { Route as LocationSlugIndexImport } from './routes/$locationSlug/index'
import { Route as DashboardWaiterImport } from './routes/dashboard/waiter'
import { Route as DashboardManagerImport } from './routes/dashboard/manager'
import { Route as DashboardCookImport } from './routes/dashboard/cook'
import { Route as DashboardAdminImport } from './routes/dashboard/admin'
import { Route as DashboardManagerIndexImport } from './routes/dashboard/manager/index'
import { Route as DashboardAdminIndexImport } from './routes/dashboard/admin/index'
import { Route as LocationSlugTableNumberIndexImport } from './routes/$locationSlug/$tableNumber/index'
import { Route as DashboardManagerLocationSetupImport } from './routes/dashboard/manager/location-setup'
import { Route as LocationSlugTableNumberPlaceOrderImport } from './routes/$locationSlug/$tableNumber/place-order'
import { Route as LocationSlugTableNumberOrderImport } from './routes/$locationSlug/$tableNumber/order'
import { Route as LocationSlugTableNumberFeedbackImport } from './routes/$locationSlug/$tableNumber/feedback'
import { Route as DashboardManagerProductIndexImport } from './routes/dashboard/manager/product/index'
import { Route as DashboardManagerStaffCreateImport } from './routes/dashboard/manager/staff.create'
import { Route as DashboardManagerProductCreateImport } from './routes/dashboard/manager/product/create'
import { Route as DashboardManagerProductProductIdImport } from './routes/dashboard/manager/product/$productId'
import { Route as DashboardManagerCategoryCreateImport } from './routes/dashboard/manager/category/create'
import { Route as DashboardAdminLocationCreateImport } from './routes/dashboard/admin/location/create'
import { Route as DashboardAdminLocationLocationIdImport } from './routes/dashboard/admin/location/$locationId'
import { Route as DashboardManagerProductEditProductIdImport } from './routes/dashboard/manager/product/edit.$productId'
import { Route as DashboardManagerCategoryEditCategoryIdImport } from './routes/dashboard/manager/category/edit.$categoryId'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const LocationSlugRoute = LocationSlugImport.update({
  id: '/$locationSlug',
  path: '/$locationSlug',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LocationSlugIndexRoute = LocationSlugIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LocationSlugRoute,
} as any)

const DashboardWaiterRoute = DashboardWaiterImport.update({
  id: '/waiter',
  path: '/waiter',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardManagerRoute = DashboardManagerImport.update({
  id: '/manager',
  path: '/manager',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardCookRoute = DashboardCookImport.update({
  id: '/cook',
  path: '/cook',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardAdminRoute = DashboardAdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardManagerIndexRoute = DashboardManagerIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardManagerRoute,
} as any)

const DashboardAdminIndexRoute = DashboardAdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardAdminRoute,
} as any)

const LocationSlugTableNumberIndexRoute =
  LocationSlugTableNumberIndexImport.update({
    id: '/$tableNumber/',
    path: '/$tableNumber/',
    getParentRoute: () => LocationSlugRoute,
  } as any)

const DashboardManagerLocationSetupRoute =
  DashboardManagerLocationSetupImport.update({
    id: '/location-setup',
    path: '/location-setup',
    getParentRoute: () => DashboardManagerRoute,
  } as any)

const LocationSlugTableNumberPlaceOrderRoute =
  LocationSlugTableNumberPlaceOrderImport.update({
    id: '/$tableNumber/place-order',
    path: '/$tableNumber/place-order',
    getParentRoute: () => LocationSlugRoute,
  } as any)

const LocationSlugTableNumberOrderRoute =
  LocationSlugTableNumberOrderImport.update({
    id: '/$tableNumber/order',
    path: '/$tableNumber/order',
    getParentRoute: () => LocationSlugRoute,
  } as any)

const LocationSlugTableNumberFeedbackRoute =
  LocationSlugTableNumberFeedbackImport.update({
    id: '/$tableNumber/feedback',
    path: '/$tableNumber/feedback',
    getParentRoute: () => LocationSlugRoute,
  } as any)

const DashboardManagerProductIndexRoute =
  DashboardManagerProductIndexImport.update({
    id: '/product/',
    path: '/product/',
    getParentRoute: () => DashboardManagerRoute,
  } as any)

const DashboardManagerStaffCreateRoute =
  DashboardManagerStaffCreateImport.update({
    id: '/staff/create',
    path: '/staff/create',
    getParentRoute: () => DashboardManagerRoute,
  } as any)

const DashboardManagerProductCreateRoute =
  DashboardManagerProductCreateImport.update({
    id: '/product/create',
    path: '/product/create',
    getParentRoute: () => DashboardManagerRoute,
  } as any)

const DashboardManagerProductProductIdRoute =
  DashboardManagerProductProductIdImport.update({
    id: '/product/$productId',
    path: '/product/$productId',
    getParentRoute: () => DashboardManagerRoute,
  } as any)

const DashboardManagerCategoryCreateRoute =
  DashboardManagerCategoryCreateImport.update({
    id: '/category/create',
    path: '/category/create',
    getParentRoute: () => DashboardManagerRoute,
  } as any)

const DashboardAdminLocationCreateRoute =
  DashboardAdminLocationCreateImport.update({
    id: '/location/create',
    path: '/location/create',
    getParentRoute: () => DashboardAdminRoute,
  } as any)

const DashboardAdminLocationLocationIdRoute =
  DashboardAdminLocationLocationIdImport.update({
    id: '/location/$locationId',
    path: '/location/$locationId',
    getParentRoute: () => DashboardAdminRoute,
  } as any)

const DashboardManagerProductEditProductIdRoute =
  DashboardManagerProductEditProductIdImport.update({
    id: '/product/edit/$productId',
    path: '/product/edit/$productId',
    getParentRoute: () => DashboardManagerRoute,
  } as any)

const DashboardManagerCategoryEditCategoryIdRoute =
  DashboardManagerCategoryEditCategoryIdImport.update({
    id: '/category/edit/$categoryId',
    path: '/category/edit/$categoryId',
    getParentRoute: () => DashboardManagerRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$locationSlug': {
      id: '/$locationSlug'
      path: '/$locationSlug'
      fullPath: '/$locationSlug'
      preLoaderRoute: typeof LocationSlugImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/admin': {
      id: '/dashboard/admin'
      path: '/admin'
      fullPath: '/dashboard/admin'
      preLoaderRoute: typeof DashboardAdminImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/cook': {
      id: '/dashboard/cook'
      path: '/cook'
      fullPath: '/dashboard/cook'
      preLoaderRoute: typeof DashboardCookImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/manager': {
      id: '/dashboard/manager'
      path: '/manager'
      fullPath: '/dashboard/manager'
      preLoaderRoute: typeof DashboardManagerImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/waiter': {
      id: '/dashboard/waiter'
      path: '/waiter'
      fullPath: '/dashboard/waiter'
      preLoaderRoute: typeof DashboardWaiterImport
      parentRoute: typeof DashboardImport
    }
    '/$locationSlug/': {
      id: '/$locationSlug/'
      path: '/'
      fullPath: '/$locationSlug/'
      preLoaderRoute: typeof LocationSlugIndexImport
      parentRoute: typeof LocationSlugImport
    }
    '/$locationSlug/$tableNumber/feedback': {
      id: '/$locationSlug/$tableNumber/feedback'
      path: '/$tableNumber/feedback'
      fullPath: '/$locationSlug/$tableNumber/feedback'
      preLoaderRoute: typeof LocationSlugTableNumberFeedbackImport
      parentRoute: typeof LocationSlugImport
    }
    '/$locationSlug/$tableNumber/order': {
      id: '/$locationSlug/$tableNumber/order'
      path: '/$tableNumber/order'
      fullPath: '/$locationSlug/$tableNumber/order'
      preLoaderRoute: typeof LocationSlugTableNumberOrderImport
      parentRoute: typeof LocationSlugImport
    }
    '/$locationSlug/$tableNumber/place-order': {
      id: '/$locationSlug/$tableNumber/place-order'
      path: '/$tableNumber/place-order'
      fullPath: '/$locationSlug/$tableNumber/place-order'
      preLoaderRoute: typeof LocationSlugTableNumberPlaceOrderImport
      parentRoute: typeof LocationSlugImport
    }
    '/dashboard/manager/location-setup': {
      id: '/dashboard/manager/location-setup'
      path: '/location-setup'
      fullPath: '/dashboard/manager/location-setup'
      preLoaderRoute: typeof DashboardManagerLocationSetupImport
      parentRoute: typeof DashboardManagerImport
    }
    '/$locationSlug/$tableNumber/': {
      id: '/$locationSlug/$tableNumber/'
      path: '/$tableNumber'
      fullPath: '/$locationSlug/$tableNumber'
      preLoaderRoute: typeof LocationSlugTableNumberIndexImport
      parentRoute: typeof LocationSlugImport
    }
    '/dashboard/admin/': {
      id: '/dashboard/admin/'
      path: '/'
      fullPath: '/dashboard/admin/'
      preLoaderRoute: typeof DashboardAdminIndexImport
      parentRoute: typeof DashboardAdminImport
    }
    '/dashboard/manager/': {
      id: '/dashboard/manager/'
      path: '/'
      fullPath: '/dashboard/manager/'
      preLoaderRoute: typeof DashboardManagerIndexImport
      parentRoute: typeof DashboardManagerImport
    }
    '/dashboard/admin/location/$locationId': {
      id: '/dashboard/admin/location/$locationId'
      path: '/location/$locationId'
      fullPath: '/dashboard/admin/location/$locationId'
      preLoaderRoute: typeof DashboardAdminLocationLocationIdImport
      parentRoute: typeof DashboardAdminImport
    }
    '/dashboard/admin/location/create': {
      id: '/dashboard/admin/location/create'
      path: '/location/create'
      fullPath: '/dashboard/admin/location/create'
      preLoaderRoute: typeof DashboardAdminLocationCreateImport
      parentRoute: typeof DashboardAdminImport
    }
    '/dashboard/manager/category/create': {
      id: '/dashboard/manager/category/create'
      path: '/category/create'
      fullPath: '/dashboard/manager/category/create'
      preLoaderRoute: typeof DashboardManagerCategoryCreateImport
      parentRoute: typeof DashboardManagerImport
    }
    '/dashboard/manager/product/$productId': {
      id: '/dashboard/manager/product/$productId'
      path: '/product/$productId'
      fullPath: '/dashboard/manager/product/$productId'
      preLoaderRoute: typeof DashboardManagerProductProductIdImport
      parentRoute: typeof DashboardManagerImport
    }
    '/dashboard/manager/product/create': {
      id: '/dashboard/manager/product/create'
      path: '/product/create'
      fullPath: '/dashboard/manager/product/create'
      preLoaderRoute: typeof DashboardManagerProductCreateImport
      parentRoute: typeof DashboardManagerImport
    }
    '/dashboard/manager/staff/create': {
      id: '/dashboard/manager/staff/create'
      path: '/staff/create'
      fullPath: '/dashboard/manager/staff/create'
      preLoaderRoute: typeof DashboardManagerStaffCreateImport
      parentRoute: typeof DashboardManagerImport
    }
    '/dashboard/manager/product/': {
      id: '/dashboard/manager/product/'
      path: '/product'
      fullPath: '/dashboard/manager/product'
      preLoaderRoute: typeof DashboardManagerProductIndexImport
      parentRoute: typeof DashboardManagerImport
    }
    '/dashboard/manager/category/edit/$categoryId': {
      id: '/dashboard/manager/category/edit/$categoryId'
      path: '/category/edit/$categoryId'
      fullPath: '/dashboard/manager/category/edit/$categoryId'
      preLoaderRoute: typeof DashboardManagerCategoryEditCategoryIdImport
      parentRoute: typeof DashboardManagerImport
    }
    '/dashboard/manager/product/edit/$productId': {
      id: '/dashboard/manager/product/edit/$productId'
      path: '/product/edit/$productId'
      fullPath: '/dashboard/manager/product/edit/$productId'
      preLoaderRoute: typeof DashboardManagerProductEditProductIdImport
      parentRoute: typeof DashboardManagerImport
    }
  }
}

// Create and export the route tree

interface LocationSlugRouteChildren {
  LocationSlugIndexRoute: typeof LocationSlugIndexRoute
  LocationSlugTableNumberFeedbackRoute: typeof LocationSlugTableNumberFeedbackRoute
  LocationSlugTableNumberOrderRoute: typeof LocationSlugTableNumberOrderRoute
  LocationSlugTableNumberPlaceOrderRoute: typeof LocationSlugTableNumberPlaceOrderRoute
  LocationSlugTableNumberIndexRoute: typeof LocationSlugTableNumberIndexRoute
}

const LocationSlugRouteChildren: LocationSlugRouteChildren = {
  LocationSlugIndexRoute: LocationSlugIndexRoute,
  LocationSlugTableNumberFeedbackRoute: LocationSlugTableNumberFeedbackRoute,
  LocationSlugTableNumberOrderRoute: LocationSlugTableNumberOrderRoute,
  LocationSlugTableNumberPlaceOrderRoute:
    LocationSlugTableNumberPlaceOrderRoute,
  LocationSlugTableNumberIndexRoute: LocationSlugTableNumberIndexRoute,
}

const LocationSlugRouteWithChildren = LocationSlugRoute._addFileChildren(
  LocationSlugRouteChildren,
)

interface DashboardAdminRouteChildren {
  DashboardAdminIndexRoute: typeof DashboardAdminIndexRoute
  DashboardAdminLocationLocationIdRoute: typeof DashboardAdminLocationLocationIdRoute
  DashboardAdminLocationCreateRoute: typeof DashboardAdminLocationCreateRoute
}

const DashboardAdminRouteChildren: DashboardAdminRouteChildren = {
  DashboardAdminIndexRoute: DashboardAdminIndexRoute,
  DashboardAdminLocationLocationIdRoute: DashboardAdminLocationLocationIdRoute,
  DashboardAdminLocationCreateRoute: DashboardAdminLocationCreateRoute,
}

const DashboardAdminRouteWithChildren = DashboardAdminRoute._addFileChildren(
  DashboardAdminRouteChildren,
)

interface DashboardManagerRouteChildren {
  DashboardManagerLocationSetupRoute: typeof DashboardManagerLocationSetupRoute
  DashboardManagerIndexRoute: typeof DashboardManagerIndexRoute
  DashboardManagerCategoryCreateRoute: typeof DashboardManagerCategoryCreateRoute
  DashboardManagerProductProductIdRoute: typeof DashboardManagerProductProductIdRoute
  DashboardManagerProductCreateRoute: typeof DashboardManagerProductCreateRoute
  DashboardManagerStaffCreateRoute: typeof DashboardManagerStaffCreateRoute
  DashboardManagerProductIndexRoute: typeof DashboardManagerProductIndexRoute
  DashboardManagerCategoryEditCategoryIdRoute: typeof DashboardManagerCategoryEditCategoryIdRoute
  DashboardManagerProductEditProductIdRoute: typeof DashboardManagerProductEditProductIdRoute
}

const DashboardManagerRouteChildren: DashboardManagerRouteChildren = {
  DashboardManagerLocationSetupRoute: DashboardManagerLocationSetupRoute,
  DashboardManagerIndexRoute: DashboardManagerIndexRoute,
  DashboardManagerCategoryCreateRoute: DashboardManagerCategoryCreateRoute,
  DashboardManagerProductProductIdRoute: DashboardManagerProductProductIdRoute,
  DashboardManagerProductCreateRoute: DashboardManagerProductCreateRoute,
  DashboardManagerStaffCreateRoute: DashboardManagerStaffCreateRoute,
  DashboardManagerProductIndexRoute: DashboardManagerProductIndexRoute,
  DashboardManagerCategoryEditCategoryIdRoute:
    DashboardManagerCategoryEditCategoryIdRoute,
  DashboardManagerProductEditProductIdRoute:
    DashboardManagerProductEditProductIdRoute,
}

const DashboardManagerRouteWithChildren =
  DashboardManagerRoute._addFileChildren(DashboardManagerRouteChildren)

interface DashboardRouteChildren {
  DashboardAdminRoute: typeof DashboardAdminRouteWithChildren
  DashboardCookRoute: typeof DashboardCookRoute
  DashboardManagerRoute: typeof DashboardManagerRouteWithChildren
  DashboardWaiterRoute: typeof DashboardWaiterRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAdminRoute: DashboardAdminRouteWithChildren,
  DashboardCookRoute: DashboardCookRoute,
  DashboardManagerRoute: DashboardManagerRouteWithChildren,
  DashboardWaiterRoute: DashboardWaiterRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$locationSlug': typeof LocationSlugRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/login': typeof LoginRoute
  '/dashboard/admin': typeof DashboardAdminRouteWithChildren
  '/dashboard/cook': typeof DashboardCookRoute
  '/dashboard/manager': typeof DashboardManagerRouteWithChildren
  '/dashboard/waiter': typeof DashboardWaiterRoute
  '/$locationSlug/': typeof LocationSlugIndexRoute
  '/$locationSlug/$tableNumber/feedback': typeof LocationSlugTableNumberFeedbackRoute
  '/$locationSlug/$tableNumber/order': typeof LocationSlugTableNumberOrderRoute
  '/$locationSlug/$tableNumber/place-order': typeof LocationSlugTableNumberPlaceOrderRoute
  '/dashboard/manager/location-setup': typeof DashboardManagerLocationSetupRoute
  '/$locationSlug/$tableNumber': typeof LocationSlugTableNumberIndexRoute
  '/dashboard/admin/': typeof DashboardAdminIndexRoute
  '/dashboard/manager/': typeof DashboardManagerIndexRoute
  '/dashboard/admin/location/$locationId': typeof DashboardAdminLocationLocationIdRoute
  '/dashboard/admin/location/create': typeof DashboardAdminLocationCreateRoute
  '/dashboard/manager/category/create': typeof DashboardManagerCategoryCreateRoute
  '/dashboard/manager/product/$productId': typeof DashboardManagerProductProductIdRoute
  '/dashboard/manager/product/create': typeof DashboardManagerProductCreateRoute
  '/dashboard/manager/staff/create': typeof DashboardManagerStaffCreateRoute
  '/dashboard/manager/product': typeof DashboardManagerProductIndexRoute
  '/dashboard/manager/category/edit/$categoryId': typeof DashboardManagerCategoryEditCategoryIdRoute
  '/dashboard/manager/product/edit/$productId': typeof DashboardManagerProductEditProductIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/login': typeof LoginRoute
  '/dashboard/cook': typeof DashboardCookRoute
  '/dashboard/waiter': typeof DashboardWaiterRoute
  '/$locationSlug': typeof LocationSlugIndexRoute
  '/$locationSlug/$tableNumber/feedback': typeof LocationSlugTableNumberFeedbackRoute
  '/$locationSlug/$tableNumber/order': typeof LocationSlugTableNumberOrderRoute
  '/$locationSlug/$tableNumber/place-order': typeof LocationSlugTableNumberPlaceOrderRoute
  '/dashboard/manager/location-setup': typeof DashboardManagerLocationSetupRoute
  '/$locationSlug/$tableNumber': typeof LocationSlugTableNumberIndexRoute
  '/dashboard/admin': typeof DashboardAdminIndexRoute
  '/dashboard/manager': typeof DashboardManagerIndexRoute
  '/dashboard/admin/location/$locationId': typeof DashboardAdminLocationLocationIdRoute
  '/dashboard/admin/location/create': typeof DashboardAdminLocationCreateRoute
  '/dashboard/manager/category/create': typeof DashboardManagerCategoryCreateRoute
  '/dashboard/manager/product/$productId': typeof DashboardManagerProductProductIdRoute
  '/dashboard/manager/product/create': typeof DashboardManagerProductCreateRoute
  '/dashboard/manager/staff/create': typeof DashboardManagerStaffCreateRoute
  '/dashboard/manager/product': typeof DashboardManagerProductIndexRoute
  '/dashboard/manager/category/edit/$categoryId': typeof DashboardManagerCategoryEditCategoryIdRoute
  '/dashboard/manager/product/edit/$productId': typeof DashboardManagerProductEditProductIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$locationSlug': typeof LocationSlugRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/login': typeof LoginRoute
  '/dashboard/admin': typeof DashboardAdminRouteWithChildren
  '/dashboard/cook': typeof DashboardCookRoute
  '/dashboard/manager': typeof DashboardManagerRouteWithChildren
  '/dashboard/waiter': typeof DashboardWaiterRoute
  '/$locationSlug/': typeof LocationSlugIndexRoute
  '/$locationSlug/$tableNumber/feedback': typeof LocationSlugTableNumberFeedbackRoute
  '/$locationSlug/$tableNumber/order': typeof LocationSlugTableNumberOrderRoute
  '/$locationSlug/$tableNumber/place-order': typeof LocationSlugTableNumberPlaceOrderRoute
  '/dashboard/manager/location-setup': typeof DashboardManagerLocationSetupRoute
  '/$locationSlug/$tableNumber/': typeof LocationSlugTableNumberIndexRoute
  '/dashboard/admin/': typeof DashboardAdminIndexRoute
  '/dashboard/manager/': typeof DashboardManagerIndexRoute
  '/dashboard/admin/location/$locationId': typeof DashboardAdminLocationLocationIdRoute
  '/dashboard/admin/location/create': typeof DashboardAdminLocationCreateRoute
  '/dashboard/manager/category/create': typeof DashboardManagerCategoryCreateRoute
  '/dashboard/manager/product/$productId': typeof DashboardManagerProductProductIdRoute
  '/dashboard/manager/product/create': typeof DashboardManagerProductCreateRoute
  '/dashboard/manager/staff/create': typeof DashboardManagerStaffCreateRoute
  '/dashboard/manager/product/': typeof DashboardManagerProductIndexRoute
  '/dashboard/manager/category/edit/$categoryId': typeof DashboardManagerCategoryEditCategoryIdRoute
  '/dashboard/manager/product/edit/$productId': typeof DashboardManagerProductEditProductIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$locationSlug'
    | '/dashboard'
    | '/login'
    | '/dashboard/admin'
    | '/dashboard/cook'
    | '/dashboard/manager'
    | '/dashboard/waiter'
    | '/$locationSlug/'
    | '/$locationSlug/$tableNumber/feedback'
    | '/$locationSlug/$tableNumber/order'
    | '/$locationSlug/$tableNumber/place-order'
    | '/dashboard/manager/location-setup'
    | '/$locationSlug/$tableNumber'
    | '/dashboard/admin/'
    | '/dashboard/manager/'
    | '/dashboard/admin/location/$locationId'
    | '/dashboard/admin/location/create'
    | '/dashboard/manager/category/create'
    | '/dashboard/manager/product/$productId'
    | '/dashboard/manager/product/create'
    | '/dashboard/manager/staff/create'
    | '/dashboard/manager/product'
    | '/dashboard/manager/category/edit/$categoryId'
    | '/dashboard/manager/product/edit/$productId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/login'
    | '/dashboard/cook'
    | '/dashboard/waiter'
    | '/$locationSlug'
    | '/$locationSlug/$tableNumber/feedback'
    | '/$locationSlug/$tableNumber/order'
    | '/$locationSlug/$tableNumber/place-order'
    | '/dashboard/manager/location-setup'
    | '/$locationSlug/$tableNumber'
    | '/dashboard/admin'
    | '/dashboard/manager'
    | '/dashboard/admin/location/$locationId'
    | '/dashboard/admin/location/create'
    | '/dashboard/manager/category/create'
    | '/dashboard/manager/product/$productId'
    | '/dashboard/manager/product/create'
    | '/dashboard/manager/staff/create'
    | '/dashboard/manager/product'
    | '/dashboard/manager/category/edit/$categoryId'
    | '/dashboard/manager/product/edit/$productId'
  id:
    | '__root__'
    | '/'
    | '/$locationSlug'
    | '/dashboard'
    | '/login'
    | '/dashboard/admin'
    | '/dashboard/cook'
    | '/dashboard/manager'
    | '/dashboard/waiter'
    | '/$locationSlug/'
    | '/$locationSlug/$tableNumber/feedback'
    | '/$locationSlug/$tableNumber/order'
    | '/$locationSlug/$tableNumber/place-order'
    | '/dashboard/manager/location-setup'
    | '/$locationSlug/$tableNumber/'
    | '/dashboard/admin/'
    | '/dashboard/manager/'
    | '/dashboard/admin/location/$locationId'
    | '/dashboard/admin/location/create'
    | '/dashboard/manager/category/create'
    | '/dashboard/manager/product/$productId'
    | '/dashboard/manager/product/create'
    | '/dashboard/manager/staff/create'
    | '/dashboard/manager/product/'
    | '/dashboard/manager/category/edit/$categoryId'
    | '/dashboard/manager/product/edit/$productId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LocationSlugRoute: typeof LocationSlugRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LocationSlugRoute: LocationSlugRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$locationSlug",
        "/dashboard",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$locationSlug": {
      "filePath": "$locationSlug.tsx",
      "children": [
        "/$locationSlug/",
        "/$locationSlug/$tableNumber/feedback",
        "/$locationSlug/$tableNumber/order",
        "/$locationSlug/$tableNumber/place-order",
        "/$locationSlug/$tableNumber/"
      ]
    },
    "/dashboard": {
      "filePath": "dashboard.tsx",
      "children": [
        "/dashboard/admin",
        "/dashboard/cook",
        "/dashboard/manager",
        "/dashboard/waiter"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/dashboard/admin": {
      "filePath": "dashboard/admin.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/admin/",
        "/dashboard/admin/location/$locationId",
        "/dashboard/admin/location/create"
      ]
    },
    "/dashboard/cook": {
      "filePath": "dashboard/cook.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/manager": {
      "filePath": "dashboard/manager.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/manager/location-setup",
        "/dashboard/manager/",
        "/dashboard/manager/category/create",
        "/dashboard/manager/product/$productId",
        "/dashboard/manager/product/create",
        "/dashboard/manager/staff/create",
        "/dashboard/manager/product/",
        "/dashboard/manager/category/edit/$categoryId",
        "/dashboard/manager/product/edit/$productId"
      ]
    },
    "/dashboard/waiter": {
      "filePath": "dashboard/waiter.tsx",
      "parent": "/dashboard"
    },
    "/$locationSlug/": {
      "filePath": "$locationSlug/index.tsx",
      "parent": "/$locationSlug"
    },
    "/$locationSlug/$tableNumber/feedback": {
      "filePath": "$locationSlug/$tableNumber/feedback.tsx",
      "parent": "/$locationSlug"
    },
    "/$locationSlug/$tableNumber/order": {
      "filePath": "$locationSlug/$tableNumber/order.tsx",
      "parent": "/$locationSlug"
    },
    "/$locationSlug/$tableNumber/place-order": {
      "filePath": "$locationSlug/$tableNumber/place-order.tsx",
      "parent": "/$locationSlug"
    },
    "/dashboard/manager/location-setup": {
      "filePath": "dashboard/manager/location-setup.tsx",
      "parent": "/dashboard/manager"
    },
    "/$locationSlug/$tableNumber/": {
      "filePath": "$locationSlug/$tableNumber/index.tsx",
      "parent": "/$locationSlug"
    },
    "/dashboard/admin/": {
      "filePath": "dashboard/admin/index.tsx",
      "parent": "/dashboard/admin"
    },
    "/dashboard/manager/": {
      "filePath": "dashboard/manager/index.tsx",
      "parent": "/dashboard/manager"
    },
    "/dashboard/admin/location/$locationId": {
      "filePath": "dashboard/admin/location/$locationId.tsx",
      "parent": "/dashboard/admin"
    },
    "/dashboard/admin/location/create": {
      "filePath": "dashboard/admin/location/create.tsx",
      "parent": "/dashboard/admin"
    },
    "/dashboard/manager/category/create": {
      "filePath": "dashboard/manager/category/create.tsx",
      "parent": "/dashboard/manager"
    },
    "/dashboard/manager/product/$productId": {
      "filePath": "dashboard/manager/product/$productId.tsx",
      "parent": "/dashboard/manager"
    },
    "/dashboard/manager/product/create": {
      "filePath": "dashboard/manager/product/create.tsx",
      "parent": "/dashboard/manager"
    },
    "/dashboard/manager/staff/create": {
      "filePath": "dashboard/manager/staff.create.tsx",
      "parent": "/dashboard/manager"
    },
    "/dashboard/manager/product/": {
      "filePath": "dashboard/manager/product/index.tsx",
      "parent": "/dashboard/manager"
    },
    "/dashboard/manager/category/edit/$categoryId": {
      "filePath": "dashboard/manager/category/edit.$categoryId.tsx",
      "parent": "/dashboard/manager"
    },
    "/dashboard/manager/product/edit/$productId": {
      "filePath": "dashboard/manager/product/edit.$productId.tsx",
      "parent": "/dashboard/manager"
    }
  }
}
ROUTE_MANIFEST_END */
